<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pboxSemiCircle.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QBORXhpZgAATU0AKgAAAAgABAMBAAUAAAABAAAAPlEQAAEAAAAB
        AQAAAFERAAQAAAABAAAOwlESAAQAAAABAAAOwgAAAAAAAYagAACxj//bAEMABAIDAwMCBAMDAwQEBAQF
        CQYFBQUFCwgIBgkNCw0NDQsMDA4QFBEODxMPDAwSGBITFRYXFxcOERkbGRYaFBYXFv/bAEMBBAQEBQUF
        CgYGChYPDA8WFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFv/A
        ABEIAG4A2gMBIgACEQEDEQH/xAAfAAABBQEBAQEBAQAAAAAAAAAAAQIDBAUGBwgJCgv/xAC1EAACAQMD
        AgQDBQUEBAAAAX0BAgMABBEFEiExQQYTUWEHInEUMoGRoQgjQrHBFVLR8CQzYnKCCQoWFxgZGiUmJygp
        KjQ1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoOEhYaHiImKkpOUlZaXmJmaoqOk
        paanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4eLj5OXm5+jp6vHy8/T19vf4+fr/xAAfAQAD
        AQEBAQEBAQEBAAAAAAAAAQIDBAUGBwgJCgv/xAC1EQACAQIEBAMEBwUEBAABAncAAQIDEQQFITEGEkFR
        B2FxEyIygQgUQpGhscEJIzNS8BVictEKFiQ04SXxFxgZGiYnKCkqNTY3ODk6Q0RFRkdISUpTVFVWV1hZ
        WmNkZWZnaGlqc3R1dnd4eXqCg4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfI
        ycrS09TV1tfY2dri4+Tl5ufo6ery8/T19vf4+fr/2gAMAwEAAhEDEQA/APv6iiigAooooAKKKKACiiig
        AooooAKKKKACvNv2hfHGveCdOkv9OtJRZW2g6jqJuxZPcRteW4haC1k2A7FlVpvm4OYwAwPB9Jqnq+la
        fqhg/tC2FwltKs0ccjEx71IZWZM7WKsAy5BwQCMEZoA8q0n4j+LdX1m0is7JIxrOpazp0FmY186z/s+c
        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
        U4XCpzkkmu3oA//Z
</value>
  </data>
</root>